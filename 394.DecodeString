class Solution {
    public String decodeString(String s) {
        Stack<String> stack = new Stack();
        String result = "";
        for (int i = 0; i < s.length(); i ++) {
            if (s.charAt(i) == '[') {
             
            } else if (s.charAt(i) == ']'){
                String temp = "";
                String en = stack.pop();
                Integer n = Integer.valueOf(stack.pop());
                for (int j = 0; j < n; j++) {
                    temp = temp + en;
                }
                if (stack.isEmpty()) {
                    result = result + temp;
                } else {
                    if (stack.peek().charAt(0) >= 'a' && stack.peek().charAt(0) <= 'z') {
                        stack.push(stack.pop() + temp);
                    } else {
                        stack.push(temp);
                    }
                }
            } else if (s.charAt(i) >= '0' && s.charAt(i) <= '9') {
                if (i > 0 && s.charAt(i - 1) >= '0' && s.charAt(i - 1) <= '9') {
                    Integer number = Integer.valueOf(stack.pop()) * 10 + s.charAt(i) - '0';
                    stack.push(number + "");
                } else {
                    stack.push(String.valueOf(s.charAt(i)));
                }
            } else {
                 if (!stack.isEmpty() && stack.peek().charAt(0) >= 'a' && stack.peek().charAt(0) <= 'z') {
                    stack.push(stack.pop() + String.valueOf(s.charAt(i)));
                } else {
                    stack.push(String.valueOf(s.charAt(i)));
                }
            }
        }
        String res = "";
        while(!stack.isEmpty()) {
            res = stack.pop() + res;
        }
        return result + res;
    }
    
}


class Solution {
    int index = 0;
    public String decodeString(String s) {
        StringBuilder sb = new StringBuilder();
        int k = 0;
        while (index < s.length()) {
            char c = s.charAt(index++);
            if (Character.isDigit(c)) {
                k *= 10;
                k += c - '0';
            } else if (Character.isLetter(c)) {
                sb.append(c);
            } else if (c == '[') {
                String subString = decodeString(s);
                for (int i = 0; i < k; i++) {
                    sb.append(subString);
                }
                k = 0;
            } else if (c == ']') {
                return sb.toString();
            }
        }
        return sb.toString();
    }
}
