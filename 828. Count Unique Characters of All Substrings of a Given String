class Solution {
    public int uniqueLetterString(String s) {
        char[] arr = s.toCharArray();
        int total = 0;
        for (int i = 0; i < s.length(); i ++) {
            int[] charCount = new int[26];
            int cur = 1;
            total += 1;
            charCount[arr[i] - 'A'] += 1;
            for (int j = i + 1; j < s.length(); j ++) {
                if (charCount[arr[j] - 'A'] == 0) {
                    cur ++;
                } else {
                    if (charCount[arr[j] - 'A'] == 1){
                        cur --;
                    }
                }
                charCount[arr[j] - 'A'] ++;
                
                total += cur;
            }
            
        }
        return total;
    }
}



class Solution {
    public int uniqueLetterString(String s) {
        char[] arr = s.toCharArray();
        int n = s.length();
        
        int[] count = new int[26];
        int[] pre = new int[26];
        int[] prepre = new int[26];
        Arrays.fill(pre, -1);
        int[] dp = new int[n + 1];
        dp[0] = 0;
        int total = 0;
        for (int i = 0; i < n; i ++){
            if (count[arr[i] - 'A'] == 0) {
                dp[i + 1] = dp[i] + i + 1;
            } else {
                dp[i + 1] = dp[i] - (pre[arr[i] - 'A'] - prepre[arr[i] - 'A']) + (i - pre[arr[i] - 'A']);
            } 
            prepre[arr[i] - 'A'] = pre[arr[i] - 'A'];
            pre[arr[i] - 'A'] = i;
            count[arr[i] - 'A'] ++;
            total += dp[i + 1];
        }
        return total;
        
    }
}
