class Solution {
    public boolean validPartition(int[] nums) {
        int n = nums.length;
        boolean[] dp = new boolean[n + 1];
        dp[0] = true;
        dp[1] = false;
        dp[2] = nums[1] == nums[0];
 
        for (int i = 2; i < n; i ++) {
            boolean cur = false;
            if (nums[i] == nums[i - 1]) {
                cur = cur || dp[i - 1];
            }
            if (nums[i] == nums[i - 1] && nums[i] == nums[i - 2]) {
                cur = cur || dp[i - 2];
            }
            if (nums[i] == nums[i - 1] + 1 && nums[i - 1] == nums[i - 2] + 1) {
                cur = cur || dp[i - 2];
            }
            dp[i + 1] = cur;
        }
        
        return dp[n];
    }
}
