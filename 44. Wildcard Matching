class Solution {
    public boolean isMatch(String s, String p) {
        int sIndex = 0, pIndex = 0, sStar = -1, pStar = -1;
        while(sIndex < s.length()) {
            if (pIndex < p.length() && (p.charAt(pIndex) == '?' || p.charAt(pIndex) == s.charAt(sIndex))) {
                pIndex ++;
                sIndex ++;
                continue;
            }
            
            if (pIndex < p.length() && p.charAt(pIndex) == '*') {
                pStar = pIndex;
                pIndex ++;
                sStar = sIndex;
                continue;
            }
            
            if (pStar != -1) {
                sIndex = sStar + 1;
                sStar += 1;
                pIndex = pStar + 1;
                continue;
            }
            
            return false;
        }
        while (pIndex < p.length() && p.charAt(pIndex) == '*') pIndex ++;
        return pIndex == p.length();
    }
}

public class Solution {
    public boolean isMatch(String s, String p) {
        int m = s.length(); int n = p.length();
        
        boolean[][] dp = new boolean[m + 1][n + 1];
        dp[0][0] = true;
        for (int i = 1; i <= m; i ++) {
            dp[i][0] = false;
        }
        
        for (int j = 1; j <= n; j ++) {
            if (p.charAt(j - 1) != '*') {
                break;
            }
            dp[0][j] = true;
        }
        
        for (int i = 1; i <= m; i ++) {
            for (int j = 1; j <= n; j ++) {
                if (p.charAt(j -1) != '*') {
                    dp[i][j] = dp[i - 1][j - 1] && (s.charAt(i - 1) == p.charAt(j - 1) || p.charAt(j - 1) == '?');
                } else {
                    dp[i][j] = dp[i - 1][j] || dp[i][j - 1] || dp[i - 1][j - 1];
                }
            }
        }
        
        return dp[m][n];
    }
}
