class Solution {
    public long countBadPairs(int[] nums) {
        int n = nums.length;
        Map<Integer, Integer> map = new HashMap<>();
        for (int i = 0; i < n; i ++) {
            int value = nums[i] - i;
            if (map.containsKey(value)) {
                map.put(value, map.get(value) + 1);
            } else {
                map.put(value, 1);
            }
        }
        
        long total = count(n);
        for(Integer key: map.keySet()) {
            if (map.get(key) != 1) {
                total -= count(map.get(key));
            }
        }
        return total;
    }
    
    long count(int n) {
        long nL = (long)n;
        return nL * (nL - 1)/2;
    }
}
