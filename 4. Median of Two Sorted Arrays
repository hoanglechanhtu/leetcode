class Solution {
    public double findMedianSortedArrays(int[] nums1, int[] nums2) {
        int N1 = nums1.length;
        int N2 = nums2.length;
        if (N2 > N1) return findMedianSortedArrays(nums2, nums1);
        int low = 0;
        int high = 2*N2 + 1;
        while(low < high) {
            int mid2 = (low + high)/2;
            int mid1 = N1 + N2 - mid2;
            
            double l1 = mid1 == 0 ? Integer.MIN_VALUE : nums1[(mid1 - 1)/2];
            double r1 = mid1 == 2*N1 ? Integer.MAX_VALUE : nums1[mid1/2];
            double l2 = mid2 == 0 ? Integer.MIN_VALUE : nums2[(mid2 - 1)/2];
            double r2 = mid2 == 2*N2 ? Integer.MAX_VALUE : nums2[mid2/2];
            
            if (l1 > r2) low = mid2;
            else if (l2 > r1) high = mid2;
            else return (Math.min(r2, r1) + Math.max(l1, l2))/2;
        }
        return -1;
    }
}
